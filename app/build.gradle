plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jetbrains.kotlin.kapt"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}
import java.util.Properties
import java.io.FileInputStream

def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        savit {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdk 30
    buildToolsVersion "30.0.3"
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
    }
    ndkVersion '23.0.7530507'
    externalNativeBuild {
        cmake {
            version "3.21.0"
        }
    }
    defaultConfig {
        applicationId "org.savit.savitauthenticator"
        minSdk 23
        targetSdk 30
        versionCode 7
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:1.0.0-beta09"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.0-rc01'
    api("com.google.guava:guava:30.1.1-android")

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.0.0-rc01"
    testImplementation 'org.robolectric:robolectric:4.5.1'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.8.2'
    implementation("com.squareup.moshi:moshi:1.12.0")

    //Junit, room and hamcrest testing
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.room:room-testing:2.3.0"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"

    //Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:$koin_version"
    //Koin for Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    //Koin for Jetpack Compose (unstable version)
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    // Jetpack Compose Integration for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
    implementation "androidx.compose.runtime:runtime-livedata:1.0.0-rc01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"


    implementation "com.airbnb.android:lottie-compose:1.0.0-beta07-1"
    implementation("androidx.navigation:navigation-compose:2.4.0-alpha04")
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'com.google.mlkit:barcode-scanning:16.2.0'

    //Camera x
    def camerax_version = "1.0.0"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to ad0ditionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha26"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha26"
    // For Identity Credential APIs
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    implementation "net.zetetic:android-database-sqlcipher:4.4.0"
    implementation "androidx.sqlite:sqlite-ktx:2.1.0"
    implementation "androidx.preference:preference-ktx:1.1.1"

    def room_version = "2.3.0"

    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation("androidx.datastore:datastore:1.0.0-rc01")
    implementation("androidx.datastore:datastore-preferences:1.0.0-rc01")


    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.compose.material:material-icons-extended:1.0.0-rc01"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha08"

    // Ktor
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation("androidx.biometric:biometric:1.2.0-alpha03")
    implementation "androidx.security:security-crypto-ktx:1.1.0-alpha03"
    implementation platform('com.google.firebase:firebase-bom:28.2.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation "io.insert-koin:koin-test:$koin_version"
    // Needed JUnit version
    implementation "io.insert-koin:koin-test-junit4:$koin_version"
}
